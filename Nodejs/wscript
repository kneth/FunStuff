import os
import glob

# This snippet is to show full commands as WAF executes
import sys
import Build
old = Build.BuildContext.exec_command
def exec_command(self, cmd, **kw):
  if isinstance(cmd, list):
     print(" ".join(cmd))
     sys.stdout.flush()
  return old(self, cmd, **kw)
Build.BuildContext.exec_command = exec_command

srcdir = '.'
blddir = 'build'
VERSION = '0.0.1'

def set_options(opt):
  opt.tool_options('compiler_cxx')

def configure(conf):
  conf.check_tool('compiler_cxx')
  conf.check_tool('node_addon')

def build(bld):
  obj = bld.new_task_gen('cxx', 'shlib', 'node_addon')
  obj.target = 'funstuff'
  obj.source = ['funstuff_node.cpp', 'person_wrap.cpp', 'book_wrap.cpp', 'book.cpp', 'person.cpp']
  obj.cxxflags = ['-Wall', '-Wextra', '-ansi', '-pedantic', '-Wno-unused-parameter', '-DNDEBUG', '-O3']
#  obj.linkflags = ['-L. -lfunstuff']
  obj.linkflags = []
  ldflags = os.environ.get('LDFLAGS')
  if ldflags: obj.linkflags = ldflags.split() + obj.linkflags
